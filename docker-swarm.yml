version: '3.8'

services:
  app:
    image: local-rag-assistant:latest
    ports:
      - "8000:8000"
    volumes:
      - rag_data:/app/data
      - rag_index:/app/index
      - rag_cache:/app/cache
      - rag_logs:/app/logs
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
        order: stop-first
    networks:
      - rag_network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - rag_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - rag_network
    depends_on:
      - app

volumes:
  rag_data:
    driver: local
  rag_index:
    driver: local
  rag_cache:
    driver: local
  rag_logs:
    driver: local
  redis_data:
    driver: local

networks:
  rag_network:
    driver: overlay
    attachable: true 